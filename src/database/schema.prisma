// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String?     @map("username")
  email     String?     @unique
  phone     String?     @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Otp       Otp[]
  Favorites Favorites[]
  Requests  Requests[]
}

model Otp {
  id        String   @id @default(uuid())
  owner     User     @relation(fields: [userId], references: [id])
  userId    String
  code      String
  expiresIn DateTime @map("expiresIn") @db.Timestamp(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agents {
  id            String       @id @default(cuid())
  name          String
  email         String       @unique
  facePic       String       @map("face_pic")
  nationalCode  Int          @map("national_code")
  IDCardPicture String       @map("id_card_picture")
  bio           String?
  company       String?
  phone         String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @default(now())
  Properties    Properties[]
  Requests      Requests[]

  @@map("agents")
}

model Admins {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("admins")
}

model Properties {
  id                String             @id @default(cuid())
  title             String
  description       String
  price             Decimal
  address           String
  city              String
  state             String
  zip               String
  type              String
  status            String
  listingDate       DateTime
  listingPrice      Decimal
  agent             Agents             @relation(fields: [agentId], references: [id])
  agentId           String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  bedrooms          Int
  bathrooms         Int
  squareFootage     Int
  lotSize           Int
  yearBuilt         Int
  propertyType      String
  architectureStyle String
  latitude          Decimal
  longitude         Decimal
  Favorites         Favorites[]
  PropertyFeatures  PropertyFeatures[]

  @@map("properties")
}

model Favorites {
  id         String     @id @default(cuid())
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  property   Properties @relation(fields: [propertyId], references: [id])
  propertyId String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())

  @@map("favorites")
}

model Requests {
  id        String   @id @default(cuid())
  status    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  address   String
  city      String
  state     String
  rooms     Int
  latitude  Decimal
  longitude Decimal
  agent     Agents   @relation(fields: [agentId], references: [id])
  agentId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("requests")
}

model Features {
  id               String             @id @default(cuid())
  featureType      FeatureType
  featureName      String
  description      String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  PropertyFeatures PropertyFeatures[]

  @@map("features")
}

enum FeatureType {
  INTERIOR
  EXTERIOR
  AMENITY
  OTHER
}

model PropertyFeatures {
  id         String     @id @default(cuid())
  property   Properties @relation(fields: [propertyId], references: [id])
  propertyId String
  feature    Features   @relation(fields: [featureId], references: [id])
  featureId  String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())

  @@map("property_features")
}
